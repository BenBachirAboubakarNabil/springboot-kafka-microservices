spring.application.name=api-gateway
server.port=9191

eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
management.endpoints.web.exposure.include=*

spring.zipkin.base-url=http://127.0.0.1:9411/
spring.sleuth.sampler.probability=1
management.tracing.sampling.probability=1

# Route 1: Place Order (POST /api/v1/order)
spring.cloud.gateway.routes[0].id=order-place
spring.cloud.gateway.routes[0].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/order
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
spring.cloud.gateway.routes[0].filters[0].name=AuthenticationFilter

# Route 2: Get Order Details by ID (GET /api/v1/order/{id})
spring.cloud.gateway.routes[7].id=order-get-by-userid
spring.cloud.gateway.routes[7].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/v1/order/**
spring.cloud.gateway.routes[7].predicates[1]=Method=GET
spring.cloud.gateway.routes[7].filters[0].name=AuthenticationFilter

# Route 2: Get Order Details by ID (GET /api/v1/order/{id})
spring.cloud.gateway.routes[1].id=order-get-by-id
spring.cloud.gateway.routes[1].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/order/{id}
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0].name=RoleBasedAccessFilter
spring.cloud.gateway.routes[1].filters[0].args.requiredRoles[0]=CUSTOMER
# No RoleBasedAccessFilter applied; accessible to all authenticated roles

# Route 3: Get All Orders (GET /api/v1/orders)
spring.cloud.gateway.routes[2].id=order-get-all
spring.cloud.gateway.routes[2].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/orders
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0].name=RoleBasedAccessFilter
spring.cloud.gateway.routes[2].filters[0].args.requiredRoles[0]=EMPLOYEE
spring.cloud.gateway.routes[2].filters[0].args.requiredRoles[1]=ADMINISTRATOR


  # Route for Product Service (GET requests)
spring.cloud.gateway.routes[3].id=product-service-read
spring.cloud.gateway.routes[3].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/products/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET
  
  # Route for Product Service (POST, PUT, DELETE requests)
spring.cloud.gateway.routes[4].id=product-service-write
spring.cloud.gateway.routes[4].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/products/**
spring.cloud.gateway.routes[4].predicates[1]=Method=POST,PUT,DELETE
spring.cloud.gateway.routes[4].filters[0].name=RoleBasedAccessFilter
spring.cloud.gateway.routes[4].filters[0].args.requiredRoles[0]=ADMIN
spring.cloud.gateway.routes[4].filters[0].args.requiredRoles[1]=EMPLOYEE
spring.cloud.gateway.routes[4].filters[0].args.requiredPermissions[0]=MANAGE_PRODUCTS


spring.cloud.gateway.routes[5].id=identity-service
spring.cloud.gateway.routes[5].uri=lb://IDENTITY-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/auth/**


spring.cloud.gateway.routes[6].id=paypal-service
spring.cloud.gateway.routes[6].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/paypal/**

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=Content-Type,Authorization,Accept,Origin,X-Requested-With,X-Csrf-Token
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600
